;;设置load-path
(add-to-list 'load-path "~/.emacs.d/lisp")

;;代码补全
(require 'mycedet)

;;php-mode
(require 'php-mode)

;;矩形选取
(require 'rect-mark)
(global-set-key (kbd "C-S-SPC") 'rm-set-mark)

;;加载主题
(require 'color-theme)
(color-theme-initialize)
;;(color-theme-pierson)
;;(color-theme-midnight)
;;(color-theme-calm-forest)
;;(color-theme-bharadwaj-slate)
(color-theme-aliceblue)
;;(color-theme-deep-blue)
;;sublimit所用的主题
;;(add-to-list 'custom-theme-load-path "~/.emacs.d/lisp/themes/")
;;(setq molokai-theme-kit t)
;;(load-theme 'molokai t)

;;设置字体
(set-default-font "-unknown-Courier10 BT-normal-normal-normal-*-21-*-*-*-m-0-iso10646-1")

;;注释代码(dwim: Do What I Mean)(Alt-;)
(defun qiang-comment-dwim-line (&optional arg)
  (interactive "*P")
  (comment-normalize-vars)
  (if (and (not (region-active-p)) (not (looking-at "[ \t]*$")))
      (comment-or-uncomment-region (line-beginning-position) (line-end-position))
    (comment-dwim arg)))
(global-set-key "\M-;" 'qiang-comment-dwim-line) 


;;自定义按键
(global-set-key (kbd "RET") 'newline-and-indent) ;换行自动对齐
(global-set-key [C-return] 'kill-this-buffer)	 ;关闭当前buffer
(global-set-key [f10] 'delete-window)			 ;F10关闭当前窗口
(global-set-key [f1] 'delete-other-windows)		 ;F1关闭其它窗口
(global-set-key [f2] 'split-window-below)		 ;F2纵向分屏
(global-set-key [f3] 'split-window-right)		 ;F3横向分屏
(global-set-key [f8] 'other-window)				 ;F8窗口间跳转
(global-set-key [f4] 'eshell)					 ;F4进入eshell
(global-set-key [f5] 'rename-buffer)			 ;F5修改缓冲区名字
(global-set-key [f11] 'my-fullscreen)			 ;F11全屏(后面定义)
(global-set-key (kbd "C-g") 'goto-line)			 ;跳转指定行
(global-set-key [C-tab] '(lambda () (interactive) (insert-char 9 1))) ;插入tab键

;;普通设置
(setq default-tab-width 4)				;tab键设置为4个空格
(setq inhibit-startup-message t)		;关闭起动时闪屏
(setq visible-bell t)					;关闭出错时的提示声
(setq make-backup-files 0)				;不产生备份文件
(setq auto-save-default 0)				;不产生临时文件
(setq default-major-mode 'text-mode)	;启动默认开启text模式
(global-font-lock-mode t)				;语法高亮
(auto-image-file-mode t)				;打开图片显示功能
(fset 'yes-or-no-p 'y-or-n-p)			;以y/n代表yes/no
(global-linum-mode t)					;显示行号
(column-number-mode t)					;显示列号
(show-paren-mode t)						;显示括号匹配
(tool-bar-mode 0)						;去掉那个大大的工具栏
(menu-bar-mode 0)						;去掉菜单栏
(scroll-bar-mode 0)						;去掉滚动条
(mouse-avoidance-mode 'animate)			;光标靠近鼠标指针时，让鼠标指针自动让开
(setq mouse-yank-at-point t)			;支持中键粘贴
(transient-mark-mode t)					;允许临时设置标记
(setq x-select-enable-clipboard t)		;支持emacs和外部程序的粘贴
(setq frame-title-format '("" buffer-file-name "@emacs")) ;在标题栏显示buffer名称
(setq default-fill-column 80)							  ;默认显示 80列就换行
(setq track-eol t)					 ;当光标在行尾上下移动的时候，始终保持在行尾
(setq mouse-yank-at-point t)		 ;粘贴于光标处，而不是鼠标指针处
(setq-default cursor-type 'bar)		 ;光标显示为一竖线
(global-auto-revert-mode 1)			 ;自动刷新文件（磁盘上文件被修改）
(setq default-directory "~/Workspace/")	;默认工作目录
;;修改启动两个窗口时的默认布局方式为横向布局
(setq split-height-threshold nil)
(setq split-width-threshold 0)

;;鼠标滚轮，默认的滚动太快，这里改为3行
(defun up-slightly () (interactive) (scroll-up 3))
(defun down-slightly () (interactive) (scroll-down 3))
(global-set-key [mouse-4] 'down-slightly)
(global-set-key [mouse-5] 'up-slightly)

;;设置透明度
(global-set-key [f9] 'loop-alpha)
(setq alpha-list '((100 100) (95 65) (85 55) (75 45) (65 35)))
;;(setq alpha-list '((100 100) (85 55) (65 35)))
(defun loop-alpha ()
  (interactive)
  (let ((h (car alpha-list)))                ;; head value will set to
    ((lambda (a ab)
       (set-frame-parameter (selected-frame) 'alpha (list a ab))
       (add-to-list 'default-frame-alist (cons 'alpha (list a ab)))
       ) (car h) (car (cdr h)))
    (setq alpha-list (cdr (append alpha-list (list h))))))


;;全屏
(defun my-fullscreen ()
  (interactive)
  (x-send-client-message
   nil 0 nil "_NET_WM_STATE" 32
   '(2 "_NET_WM_STATE_FULLSCREEN" 0)))
;;(my-fullscreen)

;;最大化
(defun my-maximized ()
  (interactive)
  (x-send-client-message
   nil 0 nil "_NET_WM_STATE" 32
   '(2 "_NET_WM_STATE_MAXIMIZED_HORZ" 0))
  (x-send-client-message
   nil 0 nil "_NET_WM_STATE" 32
   '(2 "_NET_WM_STATE_MAXIMIZED_VERT" 0)))
;;启动emacs时窗口最大化
(my-maximized)

;;设置字符集
(set-fontset-font "fontset-default"
				  'gb18030 '("Microsoft YaHei" . "unicode-bmp"))

;;Markdown Mode
(autoload 'markdown-mode "markdown-mode"
   "Major mode for editing Markdown files" t)
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))

;;给窗口设置编号
(require 'window-numbering)
(window-numbering-mode 1)

;;将光标移动到当前行的中间位置
(defun middle-of-line ()
  "Put cursor at the middle point of the line."
  (interactive)
  (goto-char (/ (+ (point-at-bol) (point-at-eol)) 2)))
(global-set-key (kbd "C-z") 'middle-of-line)


;;;;;;;;;;;;;;;;;;
;; nyan-mode 彩虹猫
;;;;;;;;;;;;;;;;;;
(add-to-list 'load-path "~/.emacs.d/nyan-mode")
(require 'nyan-mode)
(setq default-mode-line-format
      (list ""
            'mode-line-modified
            "%10b"
            '(:eval (when nyan-mode (list (nyan-create))));;注意添加此句到你的format配置列表中
            " "
;;            'default-directory
            " "
            "%[("
            'mode-name
            'minor-mode-list
            "%n"
            'mode-line-process
            ")%]--"
            "Line %l--"
            '(-3 . "%P")
            "-%-"))
(nyan-mode t);;启动nyan-mode
(nyan-start-animation);;开始舞动吧（会耗cpu资源）

;;buffer激活时高亮显示
(set-face-attribute  'mode-line
                     nil
                     :foreground "gray80"
                     :background "goldenrod"
                     :box '(:line-width 1 :style released-button))
(set-face-attribute  'mode-line-inactive
                     nil
                     :foreground "gray30"
                     :background "gray10"
                     :box '(:line-width 1 :style released-button))

;;清空当前buffer中的内容
(global-set-key (kbd "C-c e") 'erase-buffer)
(put 'erase-buffer 'disabled nil)

;;eshell上下方向键回滚历史命令
(add-hook 'eshell-mode-hook  
		  (lambda ()  
			(local-set-key (kbd "<up>") 'eshell-previous-matching-input-from-input)
			(local-set-key (kbd "<down>") 'eshell-next-matching-input-from-input)))
;;开启历史命令记录
(setq eshell-save-history-on-exit t)
